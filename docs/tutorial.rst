.. include:: global.rst

Введение в ObjectPack
*********************

objectpack расширяет возможности m3-core и m3-ext и позволяет экстремально
быстро разрабатывать справочники для различных учётных систем.

Пример для нетерпеливых:

.. code::

    # models.py

    class Person(models.Model):

        name = models.CharField(max_length=150, verbose_name=u'Имя')
        surname = models.CharField(max_length=150, verbose_name=u'Фамилия')
        birthday = models.DateField(verbose_name=u'Дата рождения')

        def __unicode__(self):
            return u"%s %s" % (surname, name)

        class Meta:
            verbose_name = u'Физ. лицо'
            verbose_name_plural = u'Физ. лица'

.. code::

    # actions.py

    class PersonPack(objectpack.ObjectPack):

        model = Person

        add_window = edit_window = objectpack.ModelEditWindow.fabricate(model)

        add_to_menu = True

Всего четыре строчки кодов (не считая импортов) и что мы имеем в результате?

.. figure:: images/tutor1.png
    :align: center

    Окно со списком объектов

.. figure:: images/tutor2.png
    :align: center

    Окно добавления/редактирования объекта

Это готовый справочник физических лиц.

ObjectPack
==========

|ObjectPack| - главный класс библиотеки. Это пак, который реализует основные
CRUD операции для модели и содержит следующие экшены:

* |ObjectAddWindowAction| - возвращает ExtJS окно
  добавления нового объекта

* |ObjectEditWindowAction| - возвращает ExtJS окно
  редактирования объекта

* |ObjectSaveAction| - сохранение нового и
  обновление существующего объектов

* |ObjectListWindowAction| - возвращает окно со
  списком объектов

* |ObjectRowsAction| - возвращает JSON-строки для
  окна со списком объектов

* |ObjectDeleteAction| - удаляет объекты


Контроллер и точки расширения
=============================

В качестве контроллера в ObjectPack используется |ObservableController|.
Особенностью этого контроллера является то, что при регистрации в нём экшена,
последний  в свою очередь добавляется в реестр слушателей наблюдателя |Observer|.

|Observer| позволяет регистрировать в экшенах точки расширения,
а также добавляет в каждый экшен две точки расширения *before* и *after*, которые
действуют как :mod:`m3.actions.Action.pre_run` и :mod:`m3.actions.Action.post_run`,
но выполняются соответственно до и после них, т.е. если методы *before* и *after*
вернут какой-либо результат ActionResult, то результатом выполнения экшена будет он.

Рассмотрим на примере из :mod:`objectpack.demo`::

    # создаём наблюдателя
    obs = observer.Observer()
        #logger=logger, verbose_level=observer.Observer.LOG_MORE)

    # создаём контроллер
    action_controller = observer.ObservableController(obs, "/controller")


Далее создаем слушателя, который описывается классом с одним обязательным атрибутом `listen`::

    @obs.subscribe
    class Listener(object):

        listen = ['.*/.*/ObjectListWindowAction']

        def after(self, request, context, response):
            response.data.title = u'Му-ха-ха! %s' % response.data.title

Так мы подменили текст заголовка окна, метод *after* слушателя будет вызван после post_run экшена.

.. note::
    response - это по сути ActionResult, а мы помним что,
    ExtUIScriptResult в атрибуте data хранит ExtJS компонент, в данном
    случае это будет объект окна :mod:`objectpack.ui.BaseListWindow`.

Помимо *before* и *after* в экшенах ObjectPack'a, зарегистрировано множество полезных точек расширения,
например *prepare_obj* для :mod:`objectpack.actions.ObjectRowsAction`, которая делает тоже что и
:mod:`objectpack.actions.ObjectPack.prepare_row`, только *request* и *context* здесь будут аттрибутами слушателя::

    @obs.subscribe
    class StarToHash(object):

        listen = ['.*/BandedColumnPack/.*']

        def prepare_obj(self, obj):
            obj['field1'] = obj.get('field1', False) and (obj['id'] % 2)
            return obj

:ref:`Ниже <extension_points>` приведен полный перечень точек расширения для ObjectPack, но ничего не мешает нам
зарегистрировать свои::

    class DoSomethingAction(objectpack.BaseAction):

        def run(self, request, context):
            message = 'Done'
            self.handle('do_well', message)
            return OperationResult(message=message)

    @obs.subscribe
    class DoSomethingListener(object):

        listen = ['.*/.*/DoSomethingAction']

        def do_well(self, message):
            message = 'Well Done!'
            return message

Результатом выполнения этого экшена будет информационное окошко с текстом *Well Done!*

.. note::
    Если слушатели пишутся в одном приложении рядом с экшенами, то проще подключать их
    через декоратор. В случае если слушателей нужно подключить в другом модуле или в
    другом приложении, то лучше вынести их в отдельный модуль listeners.py и выполнить
    их регистрацию в `app_meta.register_action`. Регистировать можно либо через импорт модуля,
    если вы используете декоратор, или вызовом функции, которая будет подписывать слушателей в
    Observer

Когда могут понадобиться точки расширения?
------------------------------------------

Через точки расширения удобно делать проверки прав доступа и выполнение различных условий,
тем самым можно разгрузить код экшена и делегировать эти проверки слушателю.

Так же через точки расширения можно реализовать механизм плагинов.

.. _extension_points:

Точки расширения
----------------

+----------------------+----------------------+-----------------------------+----------------------------------------+
+Action                +Точка расширения      +Тип передаваемого объекта    +Описание                                +
+======================+======================+=============================+========================================+
+|ObjectRowsAction|    +query                 +Выборка данных QuerySet      +Манипуляции с выборкой данных из БД     +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +*Следующие три точки технически ничем не отличается от query, но были вынесены отдельно,     +
+                      +чтобы не нарушать семантику*                                                                 +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +apply_search          +Выборка данных QuerySet      +Поиск по выборке                        +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +apply_filter          +Выборка данных QuerySet      +Фильтрация выборки                      +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +apply_sort_order      +Выборка данных QuerySet      +Сортировка выборки                      +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +get_rows              +Список строк для сериализации+Манипуляция с готовым с сериалиазации   +
+                      +                      +в JSON                       +списком                                 +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +prepare_obj           +Объект модели                +Манипуляции с объектом перед            +
+                      +                      +                             +сериализацией в JSON (например,         +
+                      +                      +                             +установка доподнительных атрибутов)     +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +row_editing           +Кортеж с результатом         +Обработка редактирования ячейки         +
+                      +                      +редактирования ячейки:       +                                        +
+                      +                      +(Успешно/Неуспешно, Текст    +                                        +
+                      +                      +ошибки/None)                 +                                        +
+----------------------+----------------------+-----------------------------+----------------------------------------+
+|ObjectDeleteAction|  +TODO: пока нет                                                                               +
+----------------------+----------------------+-----------------------------+----------------------------------------+
+|ObjectSaveAction|    +save_obj              +Объект модели                +Обработка сохранения модели. Слушатель  +
+                      +                      +                             +должен возбуждать исключение            +
+                      +                      +                             +|AlreadySaved|, если объект уже успешно +
+                      +                      +                             +сохранён                                +
+----------------------+----------------------+-----------------------------+----------------------------------------+
+|ObjectEditWindow\    +set_window_params     +Словарь с параметрами для    +Манипуляции со словарём параметров для  +
+Action|               +                      +передачи в окно              +окна редактирования/добавления          +
+|ObjectAddWindow\     +                      +                             +                                        +
+Action|               +                      +                             +                                        +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +create_window         +Объект окна (потомок         +Манипуляции с компонентом окна (        +
+                      +                      +|BaseWindow|)                +добавление/удаление/редактирование      +
+                      +                      +                             +различных элементов, установка          +
+                      +                      +                             +параметров и т.д и т.п.                 +
+----------------------+----------------------+-----------------------------+----------------------------------------+
+|ObjectListWindow\    +TODO: пока нет                                                                               +
+Action|               +                                                                                             +
+----------------------+----------------------+-----------------------------+----------------------------------------+
+Все экшены            +before                +Принимает в аргументах       +Выполняется перед pre_run экшена        +
+                      +                      +request, context             +                                        +
+                      +----------------------+-----------------------------+----------------------------------------+
+                      +after                 +Принимает в аргументах       +Выполняется после post_run экшена       +
+                      +                      +request, context и result    +                                        +
+----------------------+----------------------+-----------------------------+----------------------------------------+